/* ===================================================================
   SEMANTIC INTERACTION UTILITIES
   Behavior-based interactive patterns
   =================================================================== */

/* ===================================================================
   CARD INTERACTIONS
   Reusable card behavior patterns
   =================================================================== */

.card-interactive {
  cursor: pointer;
  transition: var(--transition-base);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-sm);
  overflow: hidden;
}

.card-interactive:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-lg);
}

.card-interactive:active {
  transform: translateY(-1px);
  box-shadow: var(--shadow-md);
}

.card-subtle {
  transition: var(--transition-fast);
  border-radius: var(--radius-md);
}

.card-subtle:hover {
  background-color: var(--surface-secondary);
  box-shadow: var(--shadow-sm);
}

/* ===================================================================
   MEDIA CONTAINERS
   Standardized media display patterns
   =================================================================== */

.media-container {
  height: 200px;
  background-color: var(--surface-secondary);
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
  border-radius: var(--radius-md);
}

.media-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.media-container-square {
  aspect-ratio: 1;
  height: auto;
}

.media-container-wide {
  aspect-ratio: 16/9;
  height: auto;
}

.media-container-tall {
  aspect-ratio: 4/5;
  height: auto;
}

/* Standard container (default) */
.media-container-standard {
  aspect-ratio: 16/9;
  height: auto;
}

/* Square video specific enhancements */
.media-container-square {
  aspect-ratio: 1;
  height: auto;
  /* Ensure square videos don't get too large */
  max-width: min(100%, 400px);
}

/* Gallery-specific constraints for square videos */
.gallery-grid-large .media-container-square,
.gallery-grid-xlarge .media-container-square {
  /* Constrain square videos in gallery context */
  max-width: min(100%, 350px);
  margin: 0 auto; /* Center the square videos */
}

/* Responsive adjustments for square videos */
@media (max-width: 768px) {
  .media-container-square {
    max-width: 100%;
  }
  
  .gallery-grid-large .media-container-square,
  .gallery-grid-xlarge .media-container-square {
    max-width: 100%;
  }
}

/* ===================================================================
   INTERACTIVE STATES
   Semantic interaction feedback
   =================================================================== */

.interactive-lift {
  transition: var(--transition-fast);
}

.interactive-lift:hover {
  transform: translateY(-2px);
}

.interactive-scale {
  transition: var(--transition-fast);
}

.interactive-scale:hover {
  transform: scale(1.02);
}

.interactive-glow {
  transition: var(--transition-base);
}

.interactive-glow:hover {
  box-shadow: var(--shadow-md);
}

/* ===================================================================
   FOCUS BEHAVIORS
   Accessible focus patterns
   =================================================================== */

.focus-visible {
  outline: none;
}

.focus-visible:focus-visible {
  outline: 2px solid var(--vp-c-brand);
  outline-offset: 2px;
}

.focus-ring {
  transition: var(--transition-fast);
}

.focus-ring:focus {
  outline: none;
  box-shadow: var(--shadow-focus);
}

/* ===================================================================
   LOADING STATES
   Semantic loading feedback
   =================================================================== */

.loading-overlay {
  position: relative;
  pointer-events: none;
  opacity: 0.7;
}

.loading-overlay::after {
  content: '';
  position: absolute;
  inset: 0;
  background-color: var(--surface-primary);
  border-radius: inherit;
  opacity: 0.8;
  z-index: var(--z-overlay);
}

.loading-pulse {
  animation: loading-pulse 2s ease-in-out infinite;
}

@keyframes loading-pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

/* ===================================================================
   TIMELINE INTERACTION PATTERNS
   Interactive timeline components
   =================================================================== */

.timeline-track {
  position: relative;
  height: 40px;
  background: var(--surface-secondary);
  border-radius: var(--radius-2xl);
}

.timeline-point {
  position: absolute;
  width: var(--space-3);
  height: var(--space-3);
  background: var(--text-tertiary);
  border-radius: var(--radius-full);
  top: 50%;
  transform: translate(-50%, -50%);
  cursor: pointer;
  transition: var(--transition-fast);
}

.timeline-point.active {
  background: var(--vp-c-brand);
  width: var(--space-4);
  height: var(--space-4);
}

.timeline-point:hover {
  background: var(--vp-c-brand);
  transform: translate(-50%, -50%) scale(1.2);
}

.timeline-tooltip {
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  background: var(--surface-primary);
  border: var(--border-width) solid var(--border-primary);
  border-radius: var(--radius-sm);
  padding: var(--space-2);
  white-space: nowrap;
  pointer-events: none;
  opacity: 0;
  transition: var(--transition-fast);
  margin-bottom: var(--space-2);
}

.timeline-point:hover .timeline-tooltip {
  opacity: 1;
}

/* ===================================================================
   OVERLAY INTERACTION PATTERNS
   Media overlay interactions
   =================================================================== */

.media-overlay {
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: var(--transition-base);
}

.media-overlay:hover,
.media-overlay.active {
  opacity: 1;
}

.overlay-button {
  background: rgba(255, 255, 255, 0.9);
  border: none;
  border-radius: var(--radius-full);
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: var(--text-xl);
}

/* ===================================================================
   BADGE AND INDICATOR PATTERNS
   Semantic status indicators
   =================================================================== */

.media-badge {
  position: absolute;
  top: var(--space-2);
  right: var(--space-2);
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border-radius: var(--radius-full);
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--text-lg);
  z-index: var(--z-docked);
}

.status-indicator {
  width: 8px;
  height: 8px;
  border-radius: var(--radius-full);
  background-color: var(--color-success);
}

.status-indicator.warning {
  background-color: var(--color-warning);
}

.status-indicator.error {
  background-color: var(--color-error);
}

.status-indicator.info {
  background-color: var(--color-info);
}
